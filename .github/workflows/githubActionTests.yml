name: GitHub Action Tests

on:
  push:
    branches:
      - '**'  # Triggers on any branch push
      # - main # when someone pushes on main branch

jobs:
  all_tests:
    runs-on: ubuntu-latest
    env:
      NODE_TLS_REJECT_UNAUTHORIZED: 0 # to ignore SSL certificate errors

    steps:

############################
## Installations and make ##
############################

      # Clones the repository etc to make the following tests
      - name: Checkout code
        uses: actions/checkout@v3

      # Installs Docker
      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg-agent \
            software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
          sudo add-apt-repository \
            "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) \
            stable"
          sudo apt-get update
          sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Installs Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Install Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      # Install Playwright for button-click simulations
      - name: Install Playwright testing framework
        run: npm install @playwright/test --save-dev

      - name: Install Playwright browsers
        run: npx playwright install

      # Runs the make command
      - name: Test Make command
        run: cd src && docker-compose up -d --build

      # Turn the global variable GITHUBACTIONS to true to catch copntrol-logs in future tests
      - name: Set environment variable for GitHub Actions
        run: echo "GITHUBACTIONS=true" >> $GITHUB_ENV


############################
#### Makefile_commands #####
############################

      # make fill_db command (run Django database migrations and populate database)
      # it actually replicates `make fill_db` directly in YAML because githubAction does not work with "-it" flag
      - name: make fill_db command
        working-directory: ./src
        run: |
          docker exec User bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py populate_user_db || true"
          docker exec Dashboard bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py populate_dashboard_db || true"

      # Run `make fill_db` multiple times to check for errors
      # - name: make fill_db twice
      #   working-directory: ./src
      #   run: |
      #     docker exec User bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py populate_user_db"
      #     docker exec Dashboard bash -c "python manage.py makemigrations && python manage.py migrate && python manage.py populate_dashboard_db"

#TODO: make clear ou pas besoin de cette commande?

##################################################################
## Redirections by clicking home page buttons BEFORE logging in ##
##################################################################

      - name: Wait for server to be ready
        run: npx wait-on https://localhost:4430 --insecure --timeout 60000 || true

      - name: Check server status
        run: curl -v -k https://localhost:4430 || true

      # # FIX: quand il y aura un giff qui s'affiche lorsqu'on est pas connecté
      # - name: Pong page button before login
      #   run: npx playwright test .github/tests/redirections_before_login/pong_button_before_login.test.js --config=.github/config/playwright.config.js

      # FIX: dans l'attente d'avoir un bouton dashboard et le giff "not connected" associé
      # - name: Dashboard page button before login
      #   run: npx playwright test .github/tests/redirections_before_login/dashboard_button_before_login.test.js --config=.github/config/playwright.config.js

      # - name: Sign-in page button before login
      #   run: npx playwright test .github/tests/redirections_before_login/signin_button_before_login.test.js --config=.github/config/playwright.config.js

      # - name: Home page button before login
      #   run: npx playwright test .github/tests/redirections_before_login/home_button_before_login.test.js --config=.github/config/playwright.config.js


#######################
## Login and loggout ##
#######################

      # - name : sign up error tests
      #     run: npx playwright test .github/tests/signin/signup_error.test.js --config=.github/config/playwright.config.js

      # - name : login error tests
      #     run: npx playwright test .github/tests/signin/login_error.test.js --config=.github/config/playwright.config.js

      # - name: sign up and log in with created user
      #   run: npx playwright test .github/tests/signin/signup_and_login.test.js --config=.github/config/playwright.config.js

      # - name: loggout
      #   run: npx playwright test .github/tests/signin/loggout.test.js --config=.github/config/playwright.config.js

      # - name: login with make_fill_db user #IMPORTANT: laisser ce test à la fin de cette section, pour qu'on puisse faire le reste de nos tests avec un user de make fill_db connecté
      #   run: npx playwright test .github/tests/signin/login.test.js --config=.github/config/playwright.config.js


##################################################################
## Redirections by clicking home page buttons AFTER logging in ##
##################################################################

      # - name: Pong page button after login
      #   run: npx playwright test .github/tests/redirections_after_login/pong_button_after_login.test.js --config=.github/config/playwright.config.js

      # FIX: Décommenter ci-dessous qd il y aura un bouton dashboard
      # - name: Dashboard page button after login
      #   run: npx playwright test .github/tests/redirections_after_login/dashboard_button_after_login.test.js --config=.github/config/playwright.config.js


#####################
## Dashboard tests ##
#####################

      - name: Dashboard page tests
        run: npx playwright test .github/tests/dashboard/dashboard.test.js --config=.github/config/playwright.config.js